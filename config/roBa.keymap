#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                                           &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                        &kp G            &kp LS(LG(S))                      &kp SQT                     &kp H        &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp Z         &kp X         &kp C                        &kp V            &kp SEMICOLON                      &kp B                       &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 2 INT_HENKAN  &lt 1 LC(SPACE)  &lt_to_layer_0 3 LC(UP_ARROW)      &lt_to_layer_0 3 BACKSPACE  &lt 2 SPACE                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2          &msc SCRL_UP    &kp F4           &kp F5                        &kp F6  &kp F7        &kp LC(UP_ARROW)  &kp MINUS      &kp BACKSPACE
&kp F6   &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp F10  &trans      &kp F13  &kp F6  &kp LC(LEFT)  &kp LC(DOWN)      &kp LC(RIGHT)  &kp C_MUTE
&kp F11  &kp F12         &trans          &trans           &trans   &trans      &trans   &trans  &trans        &trans            &trans         &kp F11
&trans   &trans          &trans          &trans           &trans   &trans      &trans   &trans                                                 &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp EXCL                                              &kp AT_SIGN           &kp AMPERSAND          &kp PLUS        &kp MINUS        &kp EQUAL
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp HASH   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &kp CARET  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR      &kp TILDE        &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans     &trans                                                                        &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE     &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &trans                            &kp LS(LG(KP_NUMBER_5))  &trans          &kp UP_ARROW    &kp LG(LS(O))    &trans
&kp HOME       &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END    &trans         &trans  &trans                   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LG(LS(Z))  &kp LG(Z)        &kp LG(X)       &kp LG(C)        &kp LG(V)  &kp LG(B)      &trans  &trans                   &trans          &trans          &trans           &trans
&trans         &trans           &trans          &trans           &trans     &trans         &trans  &trans                                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans          &msc SCRL_UP    &trans           &trans                      &trans  &trans    &mkp MB2  &trans    &trans
&trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
&trans  &trans          &trans          &trans           &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans          &trans          &trans           &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
